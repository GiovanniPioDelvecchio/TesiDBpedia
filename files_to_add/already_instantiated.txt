[
{
	"save_name": "files_to_add/instances/two_relations.json",

	"template":"select distinct ?uri ?place where {?uri a <%(first_type)s>.
	?uri <%(first_rel)s> ?place.
	?uri <%(second_rel)s> ?date
	Filter(?date< %(first_date)s)}",

	"NNQT":"Which are the %(first_type)s born before %(first_date)s, and what are their respective
			birthplaces?",

	"valid_types":{"first_type":"dbo:Artist"},

	"relation_constraints":{"first_rel":"is http://dbpedia.org/ontology/birthPlace", "second_rel":
	"is http://dbpedia.org/ontology/birthDate"},

	"single_entities": {},

	"constants": {"first_date":"1960-01-01_1981-01-01_1-0-0"}
}, {
	"save_name":"files_to_add/instances/two_types.json",

	"template":"select distinct ?otherUri where {select distinct count(?uri) as ?numbooks ?otherUri where {?uri a <%(first_type)s>. 
	?otherUri a <%(second_type)s>. 
	?uri <%(rel_to_insert)s> ?otherUri.}
	GROUP BY ?otherUri HAVING(count(?uri)>%(first_constant)s)}",

	"NNQT":"Which are the %(second_type)s who wrote more than %(first_constant)s %(first_type)s?",

	"valid_types":{"first_type":"dbo:WrittenWork", "second_type":"dbo:Artist"},

	"relation_constraints":{"rel_to_insert":"is http://dbpedia.org/ontology/author"},

	"single_entities": {},

	"constants": {"first_constant":"2_10_2"}

}, {
	"save_name":"files_to_add/instances/filter_natural_places.json",

	"template":"select distinct ?uri where {?uri a <%(type_to_insert)s>. ?uri <%(rel_to_insert)s> ?obj FILTER(?obj>%(first_constant)s)} LIMIT %(second_constant)s",

	"NNQT":"Which are the first %(second_constant)s %(type_to_insert)s that have a %(rel_to_insert)s greater than 
	%(first_constant)s?",

	"valid_types":{"type_to_insert":"dbo:NaturalPlace"},

	"relation_constraints":{"rel_to_insert":"num"},

	"single_entities": {},

	"constants": {"first_constant":"5000_10000_1000", "second_constant":"100_300_100"}
}, {
	"save_name": "files_to_add/instances/close_person_birth_date.json",

	"template":"select distinct ?uri ?bd1 where {?uri a <%(first_type)s>. 
	?uri <%(first_relation)s> ?obj.
	?obj dbo:birthDate ?bd1.
	FILTER(?bd1>%(first_date)s)
	}
	ORDER BY DESC(?bd1)",

	"NNQT":"Who are the %(first_relation)s of %(first_type)s born after %(first_date)s and when were are they born?",

	"valid_types":{"first_type":"dbo:Politician"},

	"relation_constraints":{"first_relation":"sameSettingAs"},

	"single_entities": {},

	"constants": {"first_date":"1960-01-01_1971-01-01_1-0-0"}
}, {
	"save_name": "files_to_add/instances/places_with_highest_values.json",

	"template":"SELECT ?area 
	WHERE { 
	?uri a <%(first_type)s>; <%(first_relation)s> ?rel.  ?uri <%(second_relation)s> ?area } ORDER BY DESC(?rel) LIMIT 1",

	"NNQT":"Which are the areas that contain the %(first_type)s with the highest %(first_relation)s",

	"valid_types":{"first_type":"dbo:NaturalPlace"},

	"relation_constraints":{"first_relation":"num", "second_relation":"hasLocation"}, 

	"single_entities": {},

	"constants":{}
}, { 
	"save_name": "files_to_add/instances/count_places.json",

	"template":"SELECT COUNT(?uri) as ?places
	WHERE {  ?uri a <%(first_type)s>. ?uri <%(first_rel)s> ?obj. FILTER ( ?obj > %(first_constant)s ) }",

	"NNQT":"How many %(first_type)s contain more than %(first_constant)s units of %(first_rel)s",

	"valid_types":{"first_type":"dbo:PopulatedPlace"},

	"relation_constraints":{"first_rel":"num"},

	"single_entities": {},

	"constants":{"first_constant":"10000_50000_10000"}
}, { 
	"save_name": "files_to_add/instances/containing_places.json",

	"template":"SELECT ?uri COUNT(?obj)
	WHERE {  ?obj a <%(first_type)s>. ?uri a <%(second_type)s>. ?obj <%(first_rel)s> ?uri.} GROUP BY ?uri HAVING(COUNT(?obj)>%(first_constant)s)",

	"NNQT":"Which are the %(second_type)s that contain more than %(first_constant)s %(first_type)s",

	"valid_types":{"first_type":"dbo:Place", "second_type":"dbo:PopulatedPlace"},

	"relation_constraints":{"first_rel":"hasLocation"},

	"single_entities": {},

	"constants":{"first_constant":"100_500_100"}
}, {
	"save_name": "files_to_add/instances/average_measure.json",

	"template":"SELECT ?area WHERE { 
	?area rdf:type <%(first_type)s>. 
	?uri rdf:type <%(second_type)s>. 
	?uri  <%(first_rel)s> ?measure.   
	?uri <%(second_rel)s> ?area .  }GROUP BY ?area HAVING( AVG(?measure)>%(first_constant)s)",

	"NNQT":"Which %(first_type)s contain %(second_type)s whith a mean %(first_rel)s greater than %(first_constant)s?",

	"valid_types":{"first_type":"dbo:PopulatedPlace", "second_type":"dbo:NaturalPlace"},

	"relation_constraints":{"first_rel":"num", "second_rel":"hasLocation"},

	"single_entities": {},

	"constants": {"first_constant":"1000_5000_1000"}
}, {
	"save_name": "files_to_add/instances/third_places.json",

	"template":"SELECT ?uri WHERE  { 
	?uri rdf:type <%(first_type)s>; <%(first_rel)s> ?measure; 
	<%(second_rel)s> <%(first_single_entity)s>.} ORDER BY DESC(?measure) LIMIT 1 OFFSET 2",

	"NNQT":"What is the third %(first_type)s in %(first_single_entity)s for %(first_rel)s?",

	"valid_types":{"first_type":"dbo:NaturalPlace"},

	"relation_constraints":{"first_rel":"num", "second_rel":"hasLocation"},

	"single_entities": {"first_single_entity":"dbo:Country"},

	"constants": {}
}, {
	"save_name": "files_to_add/instances/lowest_measure.json",

	"template":"SELECT ?uri WHERE  { ?uri rdf:type <%(first_type)s>; <%(first_rel)s> ?measure; <%(second_rel)s> <%(first_single_entity)s>  }ORDER BY ASC(?measure) LIMIT 1",

	"NNQT":"What is the last %(first_type)s in %(first_single_entity)s for %(first_rel)s?",

	"valid_types":{"first_type":"dbo:NaturalPlace"},

	"relation_constraints":{"first_rel":"num", "second_rel":"hasLocation"},

	"single_entities": {"first_single_entity":"dbo:Country"},

	"constants": {}
},  {
	"save_name": "files_to_add/instances/known_publication.json",

	"template":"SELECT DISTINCT ?work WHERE { ?work dbo:author <%(first_single_entity)s>;   rdf:type <%(first_type)s>.
	OPTIONAL{{?work dbp:releaseDate ?date} UNION {?work dbo:publicationDate ?date} UNION {?work dbo:pubDate ?date}}   FILTER(Bound(?date))}",

	"NNQT":"Which are the %(first_type)s that have a known publication date, written by %(first_single_entity)s?",

	"valid_types":{"first_type":"dbo:WrittenWork"},

	"relation_constraints":{},

	"single_entities": {"first_single_entity":"dbo:Writer"},

	"constants":{}
}, {
	"save_name": "files_to_add/instances/written_more_than_100.json",

	"template":"SELECT ?writer WHERE { 
	SELECT ?writer COUNT(?book) as ?numB WHERE { ?writer rdf:type <%(first_type)s>. ?book dbo:author ?writer; rdf:type <%(second_type)s> } GROUP BY ?writer HAVING(COUNT(?book)> %(first_constant)s) }",

	"NNQT":"Which are the %(first_type)s that wrote more than %(first_constant)s %(second_type)s",

	"valid_types":{"first_type":"dbo:Person", "second_type":"dbo:WrittenWork"},

	"relation_constraints":{},

	"single_entities": {},

	"constants": {"first_constant":"5_50_5"}
}
]
